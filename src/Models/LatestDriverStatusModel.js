const mongoose = require("mongoose")

const latestDriverStatusSchema = new mongoose.Schema({
    displayId:{
        type:String,
        default:''
    },
    companyId:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Company',
        required:[true,'Please add company id'],
    },
    driverId:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Driver',
        required:[true,'Please add driver id'],
    },
    coDriverId:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Driver'
    },
    vehicleId:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Vehicle'
    },
    currentStatus:{
        type:String,
        required:true
    },
    ELDConnected:{
        type:Boolean,
        default:true
    },
    dailyLogId:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'DailyLog',
    },
    calculatedLocation:{
        type:String,
        default:''
    },
    lat:{
        type:String,
        default:''
    },
    lng:{
        type:String,
        default:''
    },
    source:{
        type:String,
        default:''
    },
    positioning:{
        type:String,
        default:''
    },
    state:{
        type:String,
        default:''
    },
    timestamp:{
        type:Date
    },
    notes:{
        type:String,
        default:''
    },
    cycleTimeAvailableTomorrow:{
        type:Number,
        default:0
    },
    calculatedTimes:[{
        type:{
            type:String,
            enum:['breakTime','driveTime','shiftTime','cycleTime']
        },
        accumulatedRestartTime:{
            type:Number,
            default:0
        },
        accumulatedTime:{
            type:Number,
            default:0
        },
        limitTime:{
            type:Number,
            default:0
        },
        regulation:{
            type:String,
            default:''
        },
        restartTime:{
            type:Number,
            default:''
        }
    }],
    recap:[{
        recapDate:{
            type:String,
            default:''
        },
        timeZone:{
            type:String,
            default:''
        },
        timeWorked:{
            type:Number,
            default:0
        },
        recapTimestamp:{
            type:String,
            default:''
        },
    }],
    createdBy:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'User'
    },
    updatedBy:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'User'
    },
    createdAt:{
        type:Date,
        default: Date.now
    },
    updatedAt:{
        type:Date,
        default: Date.now
    },
    isActive:{
        type:Boolean,
        default:true
    },
    isDeleted:{
        type:Boolean,
        default:false
    }
})

const LatestDriverStatus = mongoose.model('LatestDriverStatus',latestDriverStatusSchema)
module.exports = LatestDriverStatus